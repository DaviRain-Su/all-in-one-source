export const propertiesForNewPages =  [{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\napache parquet介绍\nparquet-rs\n未来会集成到Apache Arrow中"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-02 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Apache parquet Rust实现 0.1.0版本发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"tinyrockethttps://jamesmunns.com/update/2018/04/01/tinyrocket.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-02 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"嵌入式Linux设备下缩减Rust二进制大小的一些技巧"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"redox 0.4.1https://github.com/redox-os/redox/releases/0.4.1( 每日新闻备份地址 )https://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-02 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Redox 0.4.1发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\napache-arrow介绍\narrow\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Apache Arrow 支持Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"用于处理自引用类型的问题：当一个结构体包含一个指向它自己字段的指针时，move该结构体会使该指针无效RFC 2349https://github.com/rust-lang/rfcs/blob/master/text/2349-pin.md"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"std库中将引入新的API： Pin"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"you can't Rust thathttp://lucumr.pocoo.org/2018/3/31/you-cant-rust-that/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust中你无法做到的事情"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"rust lifetimehttps://balu.github.io/lifetimes.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"这篇文章对生命周期的讲解比较好"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Thoughts on Rusthttps://rcoh.me/posts/things-learned-first-thousand-lines-of-rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"关于Rust的几点思考"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"first impressions from http://templated-thoughts.blogspot.de/2018/03/rust-first-impressions-from-c-developer.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"C++ 程序员对Rust的第一印象"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"i learned rust and i think im in lovehttps://rskupnik.github.io/I-learned-rust-and-I-think-Im-in-love( 每日新闻备份地址 )https://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-04-01 12:25"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一篇Rust安利文"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"周五消息https://internals.rust-lang.org/t/rust-2018-all-hands/7141/31"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-31 11:12"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RustAllHands大会"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"基于Timing Wheel 定时轮算法论文实现http://www.cs.columbia.edu/%7Enahum/w6998/papers/ton97-timing-wheels.pdf全新版本重构了实现，修复了很多错误，拥有六个轮级别：\n\nLevel 0: 64 x 1 millisecond slots.\n\n\nLevel 1: 64 x 64 millisecond slots.\n\n\nLevel 2: 64 x ~4 second slots.\n\n\nLevel 3: 64 x ~4 minute slots.\n\n\nLevel 4: 64 x ~4 hour slots.\n\n\nLevel 5: 64 x ~12 day slots.\n\n\ntokio timers\n\n\ntokio-timer 0.2 \n\nLevel 0: 64 x 1 millisecond slots.Level 1: 64 x 64 millisecond slots.Level 2: 64 x ~4 second slots.Level 3: 64 x ~4 minute slots.Level 4: 64 x ~4 hour slots.Level 5: 64 x ~12 day slots.tokio timershttps://tokio.rs/blog/2018-03-timers/tokio-timer 0.2 https://crates.io/crates/tokio-timer/0.2.0"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-31 11:12"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Tokio全新的Timer上线"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"eucliderhttps://github.com/Limeth/euclider( 每日新闻备份地址 )https://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-31 11:12"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"euclider：用于非欧几里德光线追踪"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"周四https://internals.rust-lang.org/t/rust-2018-all-hands/7141/13"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RustAllHands 最新消息"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Rust 1.25https://blog.rust-lang.org/2018/03/29/Rust-1.25.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust 1.25发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\ncargo web build - 支持:\n\nasm.js using Emscripten (when you pass --target=asmjs-unknown-emscripten; default)\nWebAssembly using Emscripten (when you pass --target=wasm32-unknown-emscripten)\nWebAssembly using Rust's native WebAssembly backend (when you pass --target=wasm32-unknown-unknown, requires Rust nightly)\n\n\n\nasm.js using Emscripten (when you pass --target=asmjs-unknown-emscripten; default)\nWebAssembly using Emscripten (when you pass --target=wasm32-unknown-emscripten)\nWebAssembly using Rust's native WebAssembly backend (when you pass --target=wasm32-unknown-unknown, requires Rust nightly)\ncargo webhttps://github.com/koute/cargo-web"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"cargo web帮助快速构建Web客户端"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"基于Rust嵌入式框架embedded-hal，最近发布了不少驱动embedded working group newsletterhttps://internals.rust-lang.org/t/the-embedded-working-group-newsletter-2/7176"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"嵌入式工作组最新报告"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"RustAllHands大会上做了演示，可能是钦点。Holyjithttps://github.com/nbp/holyjit"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的通用即时编译器： Holyjit"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"ggezhttp://ggez.rs/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"轻量级2D游戏框架 ggez"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\n\nDependaot\n\n\ndependabot rust support\n\nDependaothttps://github.com/marketplace/dependabotdependabot rust supporthttps://dependabot.com/blog/rust-support暂不支持workshop，但以后会支持"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Dependabot宣布支持Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"RustBridgehttps://rustbridge.github.io/( 每日新闻备份地址 )https://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-30 19:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RustBridge: 专门用于布道Rust的组织"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"最新消息https://internals.rust-lang.org/t/rust-2018-all-hands/7141/11罗列部分：\nUnsafe code guidelines\nCargo: rustup and xargo integration\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-29 12:33"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RustAllHands大会"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"受Vue & React启发papitohttps://github.com/csharad/papito"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-29 12:33"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新的Rust WASM框架"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"异步、多线程、中间件支持、简洁、夜版Rustarc-reactorhttps://github.com/seunlanlege/arc-reactor"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-29 12:33"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新的Rust web框架"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"两者都是Rust实现的静态网站生成器From cobalt.rs to gutenberghttps://markentier.tech/posts/2018/03/from-cobalt-to-gutenberg/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-29 12:33"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"为什么我从 cobalt.rs 换到了 gutenberg"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Redox的金主，system76公司发布了新的Linux Installer，使用Rust实现new installer for linuxhttps://www.reddit.com/r/rust/comments/87v4z4/check_out_our_new_installer_for_linux/( 每日新闻备份地址 )https://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-29 12:33"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新的Linux installer发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nLib团队希望在Rust 1.27版本稳定 SIMD\nCLI工作组着重于四个领域：\n\ninput (arguments, configuration)\noutput (logging, machine-readable output, terminal colors)\ntesting (expanded frameworks)\ndistribution (packaging, building man pages, listing in repositories)\n\n\n\ninput (arguments, configuration)\noutput (logging, machine-readable output, terminal colors)\ntesting (expanded frameworks)\ndistribution (packaging, building man pages, listing in repositories)\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RustAllHands消息"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"1.26版可用\nRFC 1542 Try from\npr merged\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新特性稳定： TryFrom / TryInto, and tweak impls for integers"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\n介绍文\ngithub\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Click：用于Kubernetes的命令行交互式控制器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Rust, Elm, F♯, ReasonMLExploring 4 Languages: Integrity and Consistencyhttp://www.chriskrycho.com/2018/exploring-4-languages-integrity-and-consistency.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"探索四种语言的完整性和一致性"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"对actix-web的介绍，看起来不错，前段时间有文章说Erlang之父觉得类型系统是银弹，但可以看看rust+actor的力量。Touring a Fast, Safe, and Complete(ish) Web Service in Rusthttps://brandur.org/rust-web"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"actix-web作者新博文"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Refactoring some repetitive code to a Rust macrohttps://people.gnome.org/%7Efederico/blog/refactoring-some-repetitive-code-to-a-macro.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用宏来消除重复代码"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Long story short, the node process that took about ~40s and ~400MB of memory now takes ~3s and ~16MB using Rust. 😎看来确实很棒棒rust + node.js are awesomehttps://medium.com/@benjcal/rust-node-js-are-awesome-a50d63411773"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"有人坦言：Rust + Node.js 非常棒"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Browser User Interface (BUI)基于futures + hyper + yewbui-backendhttps://github.com/astraw/bui-backend"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个前后端均使用Rust的BUI演示项目"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"rand 0.5https://crates.io/crates/rand/0.5.0-pre.0"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rand 0.5 pre版发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"每日新闻GitHub备份地址：RustStudy/rust_daily_newshttps://github.com/RustStudy/rust_daily_news"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-28 15:44"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"每日新闻加了一个备份地址，方便查询"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"核心团队和各工作小组的人围绕2018年的roadmap展开为期一周的探讨\n日程安排\nAturon的Topic pdf\nRust All Hands 2018\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust All Hands 2018 活动"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"1.26版本就应该可以使用impl Trait https://github.com/rust-lang/rust/pull/49255#event-1540662462"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"impl Trait已合并到nightly"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Atomicshttps://vorner.github.io/2018/03/25/Atomics.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"原子类型与内存顺序"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"关于闭包的话题closures 101http://mttyng.com/closures-101/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"闭包101"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"simple-bindhttps://github.com/willcrichton/simple-bind"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"基于proc_macro实现的一个有意思的库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"这哥们被老板派去参加巴黎的Rust 2018  fest，但不知道该做点啥准备，在此求助。他公司的其他人只知道Rust是一个游戏。也许你在国内推广Rust情况也是类似，可以关注此贴，参考下该贴中其他人给出的建议。Convince boss to let me go to rust festhttps://www.reddit.com/r/rust/comments/87ckyy/convince_boss_to_let_me_go_to_rust_fest/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-27 10:51"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"老板让我去参加Rust Fest"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"rust in actionhttps://github.com/barabadzhi/rust-in-action"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust in Action 的练习代码仓库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"cdrshttps://github.com/AlexPikalov/cdrs"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Cassandra Rust驱动"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"可以显示类似于1 hour ago 这样的时间信息顺便提交了一个中文PRtimeagohttps://github.com/vi/timeago"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"timeage"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"loomhttps://github.com/wecohere/loom"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"开发环境管理工具Loom"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"使用鼠标光标选择屏幕上任何位置可见的颜色，以查看其RGB表示。xcolorhttps://github.com/Soft/xcolor"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"X11的轻量级颜色选择器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"RPPAL是一个Rust库，可通过/ dev / gpiomem或/ dev / mem访问Raspberry Pi GPIO外设。rppalhttps://github.com/golemparts/rppal"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-26 11:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"谁玩树莓派？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Vigil是一个开源的状态页面，可以在基础设施上托管，用于监控所有服务器和应用程序，并且对用户可见（例如status.example.com）。\nvigil\ninfoq相关报道\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-25 13:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的一个微服务监控服务"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"总结了一些和Python相似的Rust惯用法Python idioms in Rusthttp://benjamincongdon.me/blog/2018/03/23/Python-Idioms-in-Rust/点评： 虽然有些知识是可以迁移，但不太赞同把Python（或其他语言）套到Rust上面"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-25 13:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个Pythoner眼里的Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"当然不是基于自然语言处理的，而是固定的格式chrono-englishhttps://github.com/stevedonovan/chrono-english"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-25 13:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"chrono-english将非正式的英语日期转为chrono DateTime"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"一个小工具，用于查询Unsplash API中随机显示的4k图片，显示星星和空间并将其设置为壁纸。https://unsplash.com/beautiful-wallpaper-every-dayhttps://github.com/faebser/beautiful-wallpaper-every-day"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-25 13:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"小工具：天天换新桌面"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"适用于嵌入式开发，不依赖std的net库no-std-nethttps://github.com/dunmatt/no-std-net"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-25 13:16"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"no-std网络库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Tokio：how to workhttps://habrahabr.ru/company/bitfury/blog/351824/该博客是俄文的，因为Exonum是毛子写的，此处分享一个使用Google翻译的技巧\n\n\n注意别把该技巧当梯子用，用不了的。"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"tokio在Exonum中的应用"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"基于tokio，特色是拥有一个MiddleWareChainThrusterhttps://github.com/trezm/Thruster"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"又一个Web框架"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Dora是一门基于Rust实现的编程语言，目前应该是玩具状态，但看起来作者也是有野心的，和Java和Kotlin类比。Dora目标是静态语言+GC，对自制语言感兴趣的可以看看。\nblog\ndora vm\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"DORA：用RUST实现JIT编译器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"100 days with Rust, or, a series of brick wallshttps://brandur.org/fragments/rust-brick-walls感觉作者是在学习Rust的痛苦中快要到达放弃的边缘了，不过我觉得他学100天也太短了"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"不断出现的学习壁垒：Rust搬砖100天感悟"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Compiling Rust + Windows + GTK step-by-stephttps://www.reddit.com/r/rust/comments/86kmhu/compiling_rust_windows_gtk_stepbystep/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"经验之谈： 在windows上编译Rust和GTK"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"SeqBox， 一个即使在完全丢失了文件系统结构后，也能重新构建的单个文件容器/归档，神器？https://github.com/MarcoPon/SeqBoxrust-seqboxhttps://github.com/darrenldl/rust-SeqBox"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-24 11:23"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust-SeqBox 发布1.0"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"impl Trait PR r+'d! https://github.com/rust-lang/rust/pull/49255#issuecomment-375368749KiChjang:  r+ 意思就是有人批准了合并这个 PR"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-23 11:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"impl Trait马上要稳定了"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"包含了flatten新特性attr-flattenhttps://serde.rs/attr-flatten.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-23 11:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Serde 1.0.34版本发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"作者是一名前端，在寻找后端语言的路上碰到了python用了三年之后，发现没有那么理想。因为他用过了Elm，体会到那种强类型语言带来的好处，以及编译器的友好提示之后就很难再回去了。然后听别人说Go语言没有异常、没有Null指针、有编译器，就去使用了Go。然而，他发现Go虽然上手容易，但是在实际开发中，编译器根本帮不上他的忙，在出错的时候，无法通过编译器来获得更多的反馈。他认为，虽然Go天生支持并发，但是当他不需要并发的时候，还不如直接用Python，当他需要并发的时候，Go语言又无法足够保证类型安全，他也不想用Go。最终选择了Rust，再经过陡峭的学习曲线之后，他完全享受了Rust，Rust的编译器给予他很大的保证。Rust是并发和安全的完美之选，他看好Rust，未来Rust会成为后端语言的事实标准。From python to Go to Rust: an opinionated journeyhttp://tech.allo-media.net/point/of/view/2018/03/22/from-python-to-go-to-rust.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-23 11:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一段纠结的旅程：从Python到Go再到Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Redox 0.3.5https://github.com/redox-os/redox/releases/tag/0.3.5"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-23 11:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Redox 0.3.5发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nRFC2005\n-相关issues\n可以更好地匹配引用"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust match默认绑定模式已经准备稳定了"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nembedded-hal\n使用embedded-hal读取HTS221温度/湿度传感器的示例\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用于嵌入式硬件抽象层"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Why Rust was the best thing that could have happened to Adahttps://www.reddit.com/r/ada/comments/7wzrqi/why_rust_was_the_best_thing_that_could_have/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"关于Ada和Rust的讨论（非语言争论）"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Matrix：IP层去中心化加密实时通信Matrix是IP层上互操作的、去中心化的实时通信开放标准，可被用于任何类型的IP通信：即时通信(IM)、网络电话(VoIP)，或者物联网(IoT)数据。gnome Fractalhttps://wiki.gnome.org/Apps/Fractal"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的Matrix客户端：Fractal"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"利用Rust的所有权模型来管理对外设的访问。通过将硬件访问权限与值的所有权绑定，可以在所有外设访问前后调用设置和清理代码。Safe Peripheral Managementhttps://www.tockos.org/blog/2018/peripheral-management/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"利用Rust的所有权思想来管理硬件外设"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"可以在命令行中添加表单fuihttps://github.com/xliiv/fui"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"fui 发布0.8版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Learning Rust: Memory, Ownership and Borrowinghttps://www.youtube.com/watch?v=8M0QfLUDaaA&feature=youtu.be"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「油管」学习Rust的内存、所有权和借用"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"亚马逊地址https://www.amazon.com/Network-Programming-Rust-memory-safety-concurrency/dp/1788624890"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-22 10:26"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新书：Rust网络编程"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"目前的具体工作有：\n将API指南推进到1.0\n将Cookbook推进到1.0\n将维护指南推进到1.0\n将nursery中的库稳定到1.0\n发现更多值得关注的库\nAnnouncing the Ecosystem Working Grouphttps://users.rust-lang.org/t/announcing-the-ecosystem-working-group/16324"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-21 10:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust生态系统工作组成立"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"async VIhttps://boats.gitlab.io/blog/post/2018-03-20-async-vi/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-21 10:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust 异步第六篇"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"zsh yarn autocompletionshttps://github.com/g-plane/zsh-yarn-autocompletions"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-21 10:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的zsh-yarn自动完成插件"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Building a Restful CRUD API with Rusthttps://medium.com/sean3z/building-a-restful-crud-api-with-rust-1867308352d8"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-21 10:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Rocket构建一个Restful的CRUD API"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"combine性能ms不如nomcombinehttps://www.reddit.com/r/rust/comments/85uc58/combine_30_is_released_fast_parser_combinators/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-21 10:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"又一个组合子解析器3.0了"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"正常的套路要么是用声明宏或过程宏，稍微Hack一点的是用编译器插件，这家伙竟然自己领悟出来一条用HIR实现元编程的路子不过对深入了解Rust编译器还是有帮助的type directed metaprogramming in Rusthttp://willcrichton.net/notes/type-directed-metaprogramming-in-rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-20 12:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust元编程的一条“邪路”"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Rust写的ripgrep现在搜索性能是基于C实现Ag的4倍，称得上是一款小型的杀手级Rust应用了 ​​​​"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-20 12:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Ripgrep现在是Ag的四倍速了"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"derive_more顾名思义，可以帮你自动你派生更多的trait，类似的库还有 derive-new 、derive-newtype。derive_morehttps://github.com/JelteF/derive_more"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-20 12:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"derive_more发布0.9版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"how i  love the borrow http://mttyng.com/rust-lifetimes-or-how-i-learned-to-stop-free-ing-and-love-the-borrow/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-20 12:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「爱上」Rust借用的心路历程"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"可以关注下hello Rusthttps://www.youtube.com/channel/UCZ_EWaQZCZuGGfnuqUoHujw"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-20 12:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「油管」 这哥们要发布Hello Rust系列视频"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"组播（Multicast）是网络一种点对多（one to many）的通信方式，通过报文复制完成网络中一台server对应多台接收者的高效数据传送。\nMulticast in Rust\nmulticast example\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-19 11:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"基于Rust实现组播"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"kernel-roulette是个有意思的项目，演示了如何基于Rust和C实现一个简单的Linux内核，并且在模拟读取虚拟设备的时候会随机地发生panic，就像在玩俄罗斯轮盘？kernel-roulettehttps://github.com/souvik1997/kernel-roulette"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-19 11:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用Rust实现的“内核轮盘”"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"presentation-manager-rshttps://github.com/mattdark/presentation-manager-rs"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-19 11:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新库：Rust实现的HTML5 演示文稿管理器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Building a fast Electron app with Rusthttps://keminglabs.com/blog/building-a-fast-electron-app-with-rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Rust构建一个快速的electron应用"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Number Theory using Rust's type system https://shingtaklam1324.github.io/number-theory-rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用Rust类型系统模拟Idris的数字系统"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"gtk-rshttp://gtk-rs.org/blog/2018/03/17/new-release.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Gtk-rs 发布新版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Vangers这款游戏的Rust复刻版本，实际上想要跑的话，还得依赖原始的游戏。https://www.gog.com/game/vangersvange-rshttps://github.com/kvark/vange-rs"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"我在贪玩等你（逃"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Survey of unstable standard library featureshttps://internals.rust-lang.org/t/survey-of-unstable-standard-library-features/7075"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"盘点Rust 标准库unstable特性"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"作者解释了自己对where子句的理解whats-a-where-clausehttp://mttyng.com/whats-a-where-clause/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"什么是where子句"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"stencil(模板计算)是高性能计算领域的七个主要模式之一stencil; abstract stencil calculationhttps://dev.to/termoshtt/stencil-abstract-stencil-calculation-i2m"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-18 21:29"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"抽象模板计算"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\ntalking tock\ntock\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-17 13:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"基于Cortex-M的微控制器的安全嵌入式操作系统Tock 发布1.0版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Parc3l: Combining Three.js, Rust, and WebAssembly!https://medium.com/@cwervo/parc3l-combining-three-js-rust-and-webassembly-c1e643ef7681"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-17 13:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Combining  Three.js, Rust, and WebAssembly"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"该视频讨论了CPU缓存和Rust中的数据结构，探索如何更好的编写代码以利用CPU缓存Rust Cologne, March 2018: Florian Zeitz - Caches and Youhttps://www.youtube.com/watch?v=GQBI-TcOTOk更多主题http://rust.cologne/2018/03/12/what-are-you-plotting.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-17 13:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「油管」Cologne Rust用户组线下活动视频分享"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"这篇文章简单讨论了嵌入式开发当前内存安全问题现状，以及语言的选择，对比了Rust和另外一门语言Ivory。不过Ivory语言已经近一年没有更新了，Rust目前来说应该是个更好的选择Achieving-memory-safety-without-compromisehttps://www.embedded.com/electronics-blogs/say-what-/4460422/Achieving-memory-safety-without-compromise"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-17 13:39"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"嵌入式内存安全的语言选择"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Stabilize inclusive range (..=) https://github.com/rust-lang/rust/pull/47813#issuecomment-373484863"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"闭合范围操作符 ..= 将会在1.26稳定版发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Juice是一个开放的机器学习框架，用于构建经典，深度或混合机器学习应用程序。 它受到TensorFlow，Torch，Caffe，Rust和众多研究论文背后的杰出人士的启发，并为深度学习带来了模块化，性能和便携性。juicehttps://github.com/spearow/juice"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"基于Rust实现的机器学习框架Juice"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"The Embedded Working Group Newsletter - 1https://internals.rust-lang.org/t/the-embedded-working-group-newsletter-1/7053"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust嵌入式工作组简报"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"CRDTs(Conflict-free replicated data types, 无冲突复制数据类型 )，前沿科技呢，主要用在分布式系统中dittohttps://github.com/alex-shapiro/ditto"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个通用数据结构实现CRDTs的库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"受Rust影响A Usable C++ Dialect that is Safe Against Memory Corruptionhttp://ithare.com/a-usable-c-dialect-that-is-safe-against-memory-corruption/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"C++内存安全编码规则"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Building a DNS server in Rusthttps://github.com/EmilHernvall/dnsguide"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-16 10:50"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Rust编写一个DNS服务器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Lin Clark 被编程耽误的漫画家又出手了。Making WebAssembly better for Rust & for all languageshttps://hacks.mozilla.org/2018/03/making-webassembly-better-for-rust-for-all-languages/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-15 12:28"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使WebAssembly更好地适用于Rust甚至所有语言"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"corrosionhttps://github.com/LucasBullen/corrosion"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-15 12:28"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Eclipse Rust IDE这是开源了吗？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"IBM developers https://www.ibm.com/developerworks/library/os-developers-know-rust/index.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-15 12:28"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"IBM developers 社区开始介绍Rust了"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"rust vs erlanghttps://www.infoq.com/articles/rust-erlang-comparison"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-15 12:28"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Erlang vs Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"模糊测试（Fuzing）是一种通过向目标系统提供非预期的输入并监视异常结果来发现软件漏洞的方法。Angora基于Rust实现，但ms未开源Angora: Efficient Fuzzing by Principled Searchhttps://arxiv.org/abs/1803.01307"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-15 12:28"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust在安全领域的应用"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"  "},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-14 12:54"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"燥起来，把你们的Rust都燥起来"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"regex 1.0计划https://github.com/rust-lang/regex/issues/457"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-14 12:54"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Regex库计划5.1号发布1.0版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"dighhy是一个cargo扩展，支持iOS、安卓和嵌入式单板计算机（比如树莓派）的交叉编译库。dinghyhttps://github.com/snipsco/dinghy"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-14 12:54"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"支持iOS、安卓和嵌入式单板计算机的交叉编译库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nasciinema网站\nasciinema-rs\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-14 12:54"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用Rust实现的asciinema网站客户端"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Rust2018是Rust的一个全新的大版本。Rust1.0是2015年发布，所以也称之为 Rust2015版，现在新的版本叫Rust2018版。所谓的新版本并不是指Rust语言体系要改变了，而是不同的版本。\nRust 2015: 目标是稳定\nRust 2018: 目标是提高生产力\nRust2018总的路线图包括：\n文档提升。提供更高质量更全面的文档。\n语言提升。对于RFC中已被接受的可以提升语言生产力的提案都将被实现。\n\n所有权机制提升，包括NLL、模式匹配的改进等\ntrait系统的提升，包括impl Trait和dyn Trait等语法\n模块系统提升， 增强语义和降低复杂性\nGenerators/async/await，支持异步编程\n\n\n编译器提升。从Rust 1.24开始，增量编译在stable中默认可用。编译器的性能在2018年会得到提升。\n工具提升。RLS和Rustfmt 发布1.0，并继续稳定自定义的register插件机制，并且会进一步开展集成xargo和自定义测试框架等工作。\n库提升。会推动一些重要的库发布1.0，并且会发布Rust API 手册1.0版本。\n网站提升。全面提升Rust官网，使得Rust官网对CTO或工程师都能有用，更方便地检索信息。\n\n所有权机制提升，包括NLL、模式匹配的改进等\ntrait系统的提升，包括impl Trait和dyn Trait等语法\n模块系统提升， 增强语义和降低复杂性\nGenerators/async/await，支持异步编程\n另外还包括了4个领域目标：\n网络服务。让Rust成为网络服务基础架构的最佳选择。\n命令行应用程序。\nWebAssembly。\n嵌入式设备。\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-13 10:58"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust全新版本 Rust2018 Roadmap发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"该作者发现了Hyper的拒绝服务攻击漏洞，并给出了演示代码和修复代码\ncrashing a rust hyper server with a Dos\n该作者用Rust写的反向代理库\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-13 10:58"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Dos攻击来破坏Hyper 服务器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"rust tutorialhttps://slashtutorial.com/rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-13 10:58"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"又一份Rust指南"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"indexmap可以用来代替标准库的HashMap，据文档所说，indexmap在迭代的性能上要好于HashMapindexmap 1.0https://bluss.github.io//rust/2018/03/11/the-crate-formerly-known-as-ordermap-tm/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-12 12:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"indexmap 1.0发布"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"本文给出了一些应该学习Rust的理由。should you learn rusthttps://vorner.github.io/2018/03/11/Should-you-learn-rust.html"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-12 12:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"你为什么应该学习Rust？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"resamplr web是一家卖电子乐器的电商网站，目前是基于Rails，但它们准备用Rust重写它，已经实现了一部分。但是为什么要迁移到Rust呢？理由之一是Rails的魔法太多，他们维护起来吃不消，竟然不是为了性能。也许喜欢Rust的显式风格。resamplr-webhttps://github.com/resamplr/resamplr-web"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-12 12:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个用Rust重写Ruby on Rails网站的案例"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"IPFS（InterPlanetary File System）是一个点对点的分布式超媒体分发协议，它整合了过去几年最好的分布式系统思路，为所有人提供全球统一的可寻址空间，包括Git、自证明文件系统SFS、BitTorrent和DHT，同时也被认为是最有可能取代HTTP的新一代互联网协议。这个厉害了。还能和区块链整合呢。ipfs crawlerhttps://gkbrk.com/2018/03/writing-a-simple-ipfs-crawler/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-12 12:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Rust编写一个简单的IPFS爬虫"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"你选哪个？"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-12 12:07"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"投票： 新项目打算用哪种语言？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"exploring function overloadinghttp://casualhacks.net/blog/2018-03-10/exploring-function-overloading/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-11 12:17"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"探索函数重载"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"writing servers with tokiohttps://blog.passcod.name/2018/mar/07/writing-servers-with-tokio"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-11 12:17"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用tokio实现一个服务器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"turtlehttps://github.com/sunjay/turtle"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-11 12:17"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的海龟做图库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"lshttps://matthias-endler.de/2018/ls/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-11 12:17"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用Rust实现ls命令"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"因为Rust的异步生态组件太松耦合，太分离了，开发一个应用程序可以有不同的组合，但是这样就太乱了。runtime目的是为了给应用程序统一预配置一些默认的基础设施包，方便开发。初始版本包括了reactor和基于work-stealing 的线程池，为多线程应用提供默认支持。tokio runtimehttps://tokio.rs/blog/2018-03-tokio-runtime/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Tokio发布了runtime"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"反正我不认同。"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust学习曲线你认同吗？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\n第二版\nGitHub仓库\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"用Rust写一个操作系统系列文章"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"是的，用Rust实现preferences parserhttps://blog.mozilla.org/nnethercote/2018/03/09/a-new-preferences-parser-for-firefox/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Firefox的preferences系统使用了新的解析器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"虽然名字起的像cargo插件，但实际不是cargo插件cargo-oshahttps://github.com/icefoxen/cargo-osha没太明白这个库的意义所在。"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新库：用于检测某个crate里存在多少unsafe方法"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"trace可以跟踪任何函数的执行过程。tracehttps://github.com/gsingh93/trace"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"新库：trace"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"MR组是Mixed Reality，混合现实小组，计划将Servo打造为一款未来混合现实的浏览器引擎（vs  不开源的Unity引擎）Mozilla’s Servo team joining Mixed Realityhttps://blog.servo.org/2018/03/09/servo-and-mixed-reality/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-10 12:30"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Servo组并入了MR组"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"厉害了，用Rust实现了 POSIX C 标准库，当前支持Redox和Linuxrelibchttps://github.com/redox-os/relibc"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-09 12:34"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Redox团队用Rust重新实现了libc"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"language rankinghttps://redmonk.com/sogrady/2018/03/07/language-rankings-1-18/其实关注排名没什么意义"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-09 12:34"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"RedMonk编程语言排名，Rust上升了3位"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"redefining failurehttps://epage.github.io/blog/2018/03/redefining-failure/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-09 12:34"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Failure库使用案例"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"HAL INRIA貌似是法国国家信息及自动化研究院。该论文提出了ML风格编程语言的资源管理模型，旨在兼容OCmal理念和运行时模型，提议使用析构函数扩展OCmal，在系统编程所有权和借用模式之上来提升OCmal的安全性、效率。没错，借用了Rust/C++中的一些概念。感兴趣的可以看看，对资源管理应该会有深入的了解。Resource Polymorphismhttps://hal.inria.fr/hal-01724997/document"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-09 12:34"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"法国一家研究院出品的OCaml改进论文"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"epoch vs erahttps://internals.rust-lang.org/t/epoch-vs-era/6941"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「官方投票」epoch 还是 era到底用哪个？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"该小组由最熟悉编译器的老司机组成，主要职责是：Rust Compiler Performance Working Grouphttps://internals.rust-lang.org/t/rust-compiler-performance-working-group/6934"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust编译器性能工作组成立"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"公司网站：snips.aiSnips是一个SDK，允许任何人仅用一行代码就能创建自己的人工智能助手。Snips注重安全和隐私问题，是第一个完全在设备上运行而不需要服务器的智能助手。Snips拥有41名员工，其中18人从事机器学习，14人从事工程。Snips几位创始人全部拥有博士学位。来源于知乎https://www.zhihu.com/question/55943115/answer/148568034snips-nluhttps://github.com/snipsco/snips-nlu-rs"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"人工智能自然语言处理框架Snips Nlu发布Rust版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"这个插件挺赞search-crates-io vsc plugin 1.0https://marketplace.visualstudio.com/items?itemName=belfz.search-crates-io"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"VSCode插件search-crates-io发布1.0"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"主要是重构了核心regex-syntaxregex 0.2.7https://github.com/rust-lang/regex/releases/tag/0.2.7"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"regex库发布0.2.7版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"这里教给你一个设置方法Dot execing Rusthttps://gist.github.com/achanda/9e87c2e96999bfc51f66c1467ac7e208"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-08 10:43"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"想用Rust写脚本吗？"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\n在线阅读\n仓库\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-07 11:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"「官方」Rust Wasm Book"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"还在实验阶段xrayhttps://github.com/atom/xray"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-07 11:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"基于Electron + Rust的下一代文本编辑器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Reactive Extensions for Rust - rxrshttps://github.com/yingDev/rxrs"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-07 11:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"为Rust增加响应式编程的扩展库"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Coping with Mutable State in Multiple Threads with Rusthttps://medium.com/@KevinHoffman/coping-with-mutable-state-in-multiple-threads-with-rust-9059c83b6c01"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-07 11:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"在多线程中处理可变状态"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"resolve算法是Node.js依赖关系管理的核心部分，它的存在使得即便应用程序拥有成百上千包的情况下也不会出现冲突和版本不兼容的问题。node-resolvehttps://github.com/goto-bus-stop/node-resolve"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-07 11:55"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的node.js中resolve算法"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Rust 2018 RoadMap RFChttps://github.com/rust-lang/rfcs/pull/2314#issuecomment-370576423"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-06 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust 2018 RoadMap RFC已确认合并"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"getting rusty with vimhttps://ddrscott.github.io/blog/2018/getting-rusty-with-vim/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-06 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Vim开发Rust"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"writing a microservice in rusthttp://www.goldsborough.me/rust/web/tutorial/2018/01/20/17-01-11-writing_a_microservice_in_rust/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-06 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"使用Rust实现微服务"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"genetic algorithmhttps://github.com/andschwa/rust-genetic-algorithm"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-06 11:37"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust实现的遗传算法"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nSIMD\nstd::arch\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"SIMD现已集成到nightly版本中"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"LLD链接wasm正在成为业界标准PRhttps://github.com/rust-lang/rust/pull/48125"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust使用LLD为wasm的默认链接器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"很多人谈「宏」色变，包括该文章作者的同事，当听说Rust中有宏的时候，第一反应就是「这很糟糕」。确实，有很多语言，比如Elixir谈到宏的时候，第一句就告诉你：最好不要用它。但是Rust不一样，这篇文章阐述了Rust的宏的好处。why rust has macroshttps://kasma1990.gitlab.io/2018/03/04/why-rust-has-macros/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"你为什么需要宏"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"看源码是基于tokio和future实现的，只有一个文件，可以作为学习tokio和futrue的一个实例素材。rustsynchttps://crates.io/crates/rustsync"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个Rust的rsync功能实现"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Relm是一个基于gtk+的纯Rust实现的GUI库，灵感来自于Elm语言。新的版本改进了错误消息relm http://relm.ml/relm-better-error-message"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Relm发布新版本"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"\nSIMD\nstd::arch\n"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"SIMD现已集成到nightly版本中"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"LLD链接wasm正在成为业界标准PRhttps://github.com/rust-lang/rust/pull/48125"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Rust使用LLD为wasm的默认链接器"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"很多人谈「宏」色变，包括该文章作者的同事，当听说Rust中有宏的时候，第一反应就是「这很糟糕」。确实，有很多语言，比如Elixir谈到宏的时候，第一句就告诉你：最好不要用它。但是Rust不一样，这篇文章阐述了Rust的宏的好处。why rust has macroshttps://kasma1990.gitlab.io/2018/03/04/why-rust-has-macros/"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"你为什么需要宏"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"看源码是基于tokio和future实现的，只有一个文件，可以作为学习tokio和futrue的一个实例素材。rustsynchttps://crates.io/crates/rustsync"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"一个Rust的rsync功能实现"},"type":"text"}],"type":"title"}},{"Author":{"rich_text":[{"text":{"content":"ChaosBot"},"type":"text"}],"type":"rich_text"},"Intro":{"rich_text":[{"text":{"content":"Relm是一个基于gtk+的纯Rust实现的GUI库，灵感来自于Elm语言。新的版本改进了错误消息relm http://relm.ml/relm-better-error-message"},"type":"text"}],"type":"rich_text"},"Link":{"rich_text":[{"text":{"content":""},"type":"text"}],"type":"rich_text"},"Time":{"rich_text":[{"text":{"content":"2018-03-05 10:03"},"type":"text"}],"type":"rich_text"},"Title":{"title":[{"text":{"content":"Relm发布新版本"},"type":"text"}],"type":"title"}},]
