export const propertiesForNewPages = [{ "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PRhttps://github.com/rust-lang/rust/pull/51580" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-24 09:42" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "async/await  PR已经被合并到Nightly版本" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Finda是一款搜索软件，可以搜索本机中的everything，该软件中websocket机制是基于rust实现的\nfinda\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-24 09:42" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Finda Websocket 体系架构" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "发现Rust社区相当成功原文https://ervin.ipsquad.net/2018/06/22/musing-about-communities-size-and-activity/\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-24 09:42" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该文章作者比较了几个技术社区（KED社区、QT、VLC、Rust）近8年的发展趋势" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "说是已经修复了，但还是更新失败（预计上午10点半以后就可以了）\nissues\nPR\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-23 10:07" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "昨天Rustup更新Nightly版本出了问题" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Rust 2018 edition alpha-quality预览版已经准备好了，用于测试和反馈不过该预览版并没有包含以下功能：\nNLL\n结构体定义中生命周期关系省略（RFC 2093）\n原文https://internals.rust-lang.org/t/rust-2018-an-early-preview/7776" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-23 10:07" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 2018 早期预览：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "一些第三方包也陆陆续续推出了新版本\ntantivy，全文搜索引擎\nThruster，一个Web框架\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-23 10:07" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "随着Rust 1.27稳定版发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该工具是cargo扩展，可以通过其命令在命令行修改Cargo.toml文件\ncargo add\ncargo rm\ncargo upgrade\n原文https://users.rust-lang.org/t/announcing-cargo-edit-v0-3-0/18265" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-23 10:07" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "cargo-edit发布0.3" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "releases.mdhttps://github.com/Aaronepower/rust/blob/master/RELEASES.md\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-23 10:07" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.28 Relase Notes 提前预览" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "通过下面命令参与预发布测试：RUSTUP_DIST_SERVER=https://dev-static.rust-lang.org rustup update stable新版本主要改进如下：\ndyn语法可用\n泛型参数属性可用。\n\n标准库中比较常见的是 #[may_dangle] ，未稳定之前还需要加 #![features(generic_param_attrs)]，现在不需要了，但还需要另一个属性\n以后可能可以通过自定义泛型参数属性来修改泛型的意义，目前是Rust源码中用了很多泛型参数属性\n\n\n#[must_use]也可以用于函数和类型了\n\n比如std::str::replace现在加了#[must_use]属性来表明该使用了该函数的返回值必须要被使用，如未使用则会被编译器警告\n\n\nSIMD（x86/x86_64平台）稳定了\n\n标准库中比较常见的是 #[may_dangle] ，未稳定之前还需要加 #![features(generic_param_attrs)]，现在不需要了，但还需要另一个属性\n以后可能可以通过自定义泛型参数属性来修改泛型的意义，目前是Rust源码中用了很多泛型参数属性\n\n比如std::str::replace现在加了#[must_use]属性来表明该使用了该函数的返回值必须要被使用，如未使用则会被编译器警告\n更多请看 Release noteshttps://github.com/rust-lang/rust/blob/master/RELEASES.md" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.27.0 Release 即将发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://newrustacean.com/show_notes/e024/index.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "podcast： Trait深度探索 Part2" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "给wasm_bindgen::js模块公开所有全局可用的JS API，issues里手把手介绍了如何绑定，大家快去贡献原文https://github.com/rustwasm/wasm-bindgen/issues/275" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个给wasm-bindgen贡献的机会" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://nical.github.io/posts/rustfest-paris-01.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Lyon库作者Nical在RustFest Paris 的分享 part 1" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "性能提升10%原文https://bitshifter.github.io/blog/2018/06/20/the-last-10-percent/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "通过SIMD优化Rust的Path跟踪" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.youtube.com/channel/UCU4-2XNjgtTp4LqE8LldEyw" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust NYC Meetup 活动视频" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n在线演示\nc2rust\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个可以把C代码转成Rust的库" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "我们为什么相信Wasm是去中心应用程序开发的基础层?\nwasm是统一标准\n可以选择你喜欢的语言来写智能合约，但是我们倾向于使用Rust（因为安全和无运行时开销）\n内存安全、沙盒、跨平台\n下一代区块链互操作协议Polkadot正在基于wasm构建\n原文https://paritytech.io/wasm-smart-contract-development/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Parity官方介绍wasm智能合约开发系列" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nozkriff/zemeroth，Rust写的2D回合制游戏，开发日志 https://ozkriff.github.io/2018-03-03--devlog.html\njaparic/criterion.rs，基准测试库，可生成报告图表\nexonum/exonum，区块链项目exonum的核心库\nCodeChain-io/codechain，可编程的多资产链\nsolana-labs/solana，为千兆网络上支持每秒71万事务规模而打造的区块链\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-21 11:52" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub 趋势榜今日新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "个人观点：\n没有想到用safe rust实现的解决方案\n为了提升性能\n\n不安全的组件不得污染安全组件，特别是公共的API和数据结构\n不安全的组件应该尽可能小，并与安全组件分离\n不安全的组件应该在部署过程中明确标记并准备升级\n在issues中，hyper作者（seanmonstar ）帮忙review并提出了当下存在的一堆问题，可以关注下\n讨论\nissues 289\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "争议：actix-web中大量使用unsafe带来的安全问题" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可以编译成WASM以在浏览器和服务器上进行高密度压缩。-介绍文https://dropbox.github.io/divans/\ndivans\n相关博文（含在线demo）\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Dropbox出品 ：Rust实现的新的并发矢量化压缩算法DivANS" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Carl是tokio作者，该音频采访中阐述了Rust对构建网络服务的好处podcasthttps://softwareengineeringdaily.com/2018/06/19/rust-networking-with-carl-lerche/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Podcast： carl专访" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可以帮助开发者管理crate依赖原文https://marketplace.visualstudio.com/items?itemName=serayuzgur.crates" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "VSCode插件crates" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "RLS马上要发布1.0了，官方在社区寻求帮助测试RLS的稳定性。issues914https://github.com/rust-lang-nursery/rls/issues/914" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "官方： RLS 1.0 公测" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nsbr-rs\nwyrm\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "基于wyrm的推荐系统sbr" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Gluon是基于Rust实现的一门静态类型、支持类型推断的函数式编程语言，其目标类似于lua，可以嵌入到其他语言中。gluon 0.8http://marwes.github.io/2018/06/19/gluon-0.8.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Gluon 0.8发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "记录了模块系统变化相关的讨论历程原文http://aturon.github.io/2018/06/18/listening-part-3/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "aturon.log：倾听和信任，第3部分" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "实现在编译期完成模板渲染\nfuel-line\nthruster\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Thruster框架作者博文：使用过程宏进行模板快速渲染" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://os.phil-opp.com/cpu-exceptions/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "用Rust写操作系统系列文章： CPU异常" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PADI IoT Stamp是一种树莓派设备，和邮票大小差不多FreeRTOS是一种实时嵌入式系统原文https://medium.com/@ly.lee/running-rust-and-freertos-on-the-padi-iot-stamp-fb36c5ef4844" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "在PADI IoT Stamp 上运行Rust和FreeRTOS" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "使用Ruby的同学有福了，这篇文章对比ActiveRecord介绍了DieselDiesel的作者其实也是ActiveRecord的重要贡献者，ActiveRecord在ORM界也算是王者，Diesel当然不是照搬了ActiveRecrod，而是作者在之前做ORM的经验之上经过反思之后的重新创造。原文http://patshaughnessy.net/2018/6/9/from-activerecord-to-diesel" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "从ActiveRecord到Diesel" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该文作者对当前async函数签名不太满意，通过该文章阐述了他的理由原文https://github.com/MajorBreakfast/rust-blog/blob/master/posts/2018-06-19-outer-return-type-approach.md\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-20 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该文介绍了Rust的async函数为什么应该使用外部返回类型的方法" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "jvm-rshttps://github.com/standbyme/jvm-rs" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "有人用Rust实现jvm了" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://matklad.github.io/2018/06/18/a-trick-for-test-maintenance.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "小技巧：通过添加代码覆盖率来维护测试" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Gitlab CI构建一个Rust小应用，使用Diesel和pg数据库原文https://noyez.gitlab.io/post/2018-06-15-rust-plus-diesel-plus-gitlab/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust + Diesel + GitLab + CI" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8s0l80/gsoc_servo_splitting_script_crate/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GSOC项目：将servo包分割为多个包" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8s1op3/rust_easy_router_bring_rorlike_url_matching_to/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个支持iron的Router库，可以构建类似于Ruby on Rails那样的Restful URL" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nrust-lpc82x-hal\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "LPC82x 系列微控制器的硬件抽象层" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://www.admintome.com/blog/my-emacs-rust-ide/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "如何配置Emacs作为 Rust IDE" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Rust is not so Hairy 这个标题乍一看，我还以为是Rust让他「秃了」。。。实际他是想表达，Rust并没有那么难原文https://nevi.me/rust-is-not-so-hairy/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一位哥们不知道是第几次学Rust了，写了一篇文章来讲述他的「冒险」" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "使用Go建立一个简单的REST服务，然后用Rust来实现它原文http://technosophos.com/2018/06/12/from-go-to-rust-json-and-yaml.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "从Go到Rust系列文章第二部分" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "jvm-rshttps://github.com/standbyme/jvm-rs" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "有人用Rust实现jvm了" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://matklad.github.io/2018/06/18/a-trick-for-test-maintenance.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "小技巧：通过添加代码覆盖率来维护测试" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Gitlab CI构建一个Rust小应用，使用Diesel和pg数据库原文https://noyez.gitlab.io/post/2018-06-15-rust-plus-diesel-plus-gitlab/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust + Diesel + GitLab + CI" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8s0l80/gsoc_servo_splitting_script_crate/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GSOC项目：将servo包分割为多个包" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8s1op3/rust_easy_router_bring_rorlike_url_matching_to/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个支持iron的Router库，可以构建类似于Ruby on Rails那样的Restful URL" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nrust-lpc82x-hal\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "LPC82x 系列微控制器的硬件抽象层" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://www.admintome.com/blog/my-emacs-rust-ide/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "如何配置Emacs作为 Rust IDE" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Rust is not so Hairy 这个标题乍一看，我还以为是Rust让他「秃了」。。。实际他是想表达，Rust并非「毛绒绒」的那么顺滑，还有很多「扎手」的地方，果然借用检查阻碍了不少人的学习步伐。原文https://nevi.me/rust-is-not-so-hairy/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一位哥们不知道是第几次学Rust了，写了一篇文章来讲述他的「冒险」" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "使用Go建立一个简单的REST服务，然后用Rust来实现它原文http://technosophos.com/2018/06/12/from-go-to-rust-json-and-yaml.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-19 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "从Go到Rust系列文章第二部分" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "俺对C语言和现有BEAM VM中存在的问题知之甚多啊，可惜找不到一个简单的办法让OTP团队改变语言，也没有办法将大量的重构引入到BEAM VM源码中。所以俺选择了重写，不知道是否会继续下去，但这可能是一个良好的开端。从侧面来看，如果想在项目中推广Rust，对于遗留项目，可能只有重写这条路子。issueshttps://github.com/kvakvs/ErlangRT/issues/2" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-18 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "ErlangSolution那哥们用Rust实现了一个Erlang运行时，有人问他为什么如此，他回应：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ngetsentry/sentry-cli， Sentry的命令行工具，Sentry 是一个开源的实时错误报告工具，支持很多语言，包括Rust\nresin-io/resin-wifi-connect，该项目可以帮助你从手机或笔记本上方便地设置Linux驱动设置wifi，通过 captive portal（强制打开一个指定的网页）的方式\nantoyo/relm，基于GTK+的GUI库，灵感来自于Elm\nweld-project/weld，weld是一门语言，为数据分析（数据密集型）应用提供高性能的运行时。\njaparic/cortex-m，Cortex-M处理器访问抽象\nautumnai/leaf，机器学习项目，但是已经废掉的项目不知道怎么排上来的，也许最近对Rust机器学习应用的人多了？\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-18 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今日新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该PR包含了Rust2015 中的async/await语法，以及Rust 2018中的async闭包和async块，预计在1.28版本中可以使用async/await。该PR也为futures 0.3铺路。PRhttps://github.com/rust-lang/rust/pull/51580" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-17 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "async/await PR已经准备好了" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "尝试实现以下写法原文http://idubrov.name/rust/2018/06/16/dynamic-casting-traits.html#fn:1相似功能的其他crate：query_interfacehttps://github.com/Diggsey/query_interface" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-17 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "博文：trait动态转换" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Rust实现的高性能SIMD noise库rust-simd-noisehttps://github.com/jackmott/rust-simd-noise" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-17 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "SimdNoise 1.0发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ntermoshtt/accel，基于CUDA的GPGPU框架\nul/kak-lsp，用Rust实现的 Kakoune编辑器Language Server Protocol 客户端\nparitytech/wasmi， paritytech出品的wasm解释器\nparitytech/wasm-utils，同是paritytech出品的wasm工具包，用于parity的wasm智能合约开发（貌似以太坊测试公链已经支持wasm智能合约）\nparitytech/ethabi，又是paritytech出品的以太坊api实现\nhyperledger/indy-sdk， Hyperledger Indy（超级账本商业区块链）的官方Rust SDK\npolyfractal/bounded-spsc-queue，一个有界的Rust SPSC队列\nMaikKlein/rlsl，该项目可以将Rust代码（有一定限制）编译到SPIR-IV中间语言，SPIR-IV是号称下一代图形接口vulkan的中间语言\nPistonDevelopers/dyon， Rust实现的动态类型脚本语言，越来越趋于成熟了？\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-17 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub今日趋势榜新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "niko说：\n更愿意将nll称之为基于MIR的借用检查\n现在#![feature(nll)]能干的基本就是将来发布第一版的全部功能\n现在剩下的就是提升性能（主要是编译期有大量开销，因为在MIR层面上又多了一轮类型检查）和改进错误诊断信息（指出哪里错误不够，还需要提供可理解的错误解释）\nPolonius将作为nll第二版发布，“基于MIR借用检查2.0”\n你想参与吗？请来Zulip的#wg-nll频道\nPolonius的引入使得借用检查分析粒度更加精细，在Nightly版本下使用-Zpolonius开关来尝试Polonius。但是，请记住，这将是一个'pre-alpha'状态。在正式发布nll之后，Polonius也会有更多的改进空间。\n原文http://smallcultfollowing.com/babysteps/blog/2018/06/15/mir-based-borrow-check-nll-status-update/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "基于MIR的借用检查nll状态更新" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nPR\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Deno开启了Roadmap模式，第一个里程碑包括用Rust实现 V8Worker2绑定" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "hello-pihttps://github.com/Terkwood/hello-pi" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "这傻孩子在玩rust+python开发的树莓派应用" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8raywa/winit_window_handling_library_now_has_hidpi/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Winit (window handling library) 现在支持了HiDPI" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该篇介绍如何实现一个简单的集成测试框架，在QEMU虚拟机的实例中运行集成测试。原文https://os.phil-opp.com/integration-tests/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "用Rust写OS系列文章：集成测试" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://bheisler.github.io/post/rust-on-the-gpu-with-accel/\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-16 10:27" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "使用Accel在GPU上运行Rust" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nepisodes-40\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-15 12:02" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "在aws上部署Rocket" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nRust+ wasm\nRust ＋ nom\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-15 12:02" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "油管视频：Learn+Try系列" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nnvimpam\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-15 12:02" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust实现的neovim RPC插件" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "性能比ack，ag要好amberhttps://github.com/dalance/amber\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-15 12:02" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个Rust实现的代码搜索替换工具，灵感来自于ack，ag等类grep工具" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "nrc在他的博客里列出了一些，有你感兴趣的吗？原文https://www.ncameron.org/blog/interesting_projects/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "你认为Rust社区最令你感兴趣的是哪个项目？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该文作者阐述了它对系统语言的看法，包括C/Nim/Pony/Go/Reason（OCaml）/Rust。他很想要用Rust，但他觉得Rust不太接地气（因为要和借用检查器搏斗）。这点等nll稳定以后会好很多。就不会有这么多人被吓跑了。原文https://medium.com/@sargun/systems-languages-an-experience-report-d008b2b12628" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "系统语言：一份经验报告" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "1aim公司号称重新定义建筑业，为楼宇管理提供智能的自动化管理平台。\n原文\n1aim.com\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "1aim公司开始招Rust开发者了" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Magic Pocket是Dropbox所有产品的基础设施，现在采用了SMR技术，目前正在增加数百PB的新容量。「从Go转移到Rust也使我们能够处理更多的磁盘和更大的磁盘，并且不会增加CPU和内存成本，因为它能够直接控制内存分配和垃圾回收。 查看我们的演示文稿，了解我们如何使用Rust优化Dropbox的存储以了解更多信息。」看来Rust给Dropbox帮了大忙了\n原文\npresentation\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Dropbox团队：用第一PB级SMR驱动器部署扩展Magic Pocket" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Protocol Buffer的Rust实现prosthttps://github.com/danburkert/prost" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "prost发布0.4版" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "ErlangRThttps://github.com/kvakvs/ErlangRT" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "用Rust实现的Erlang运行时（BEAM模拟器）" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ntantivy-search/tantivy，全文搜索引擎，灵感来自Lucene\nsharkdp/hyperfine，命令行基准测试工具\nogham/exa，用Rust实现的替代‘ls’的工具，有高亮显示（另一个最佳命令行工具是bat，感觉Rust实现的命令行工具高亮是标配）\nSpotifyd/spotifyd，spotifyd守护进程，Spotify是一个linux/unix平台的音乐播放器\npikelet-lang/pikelet，用Rust实现的一个小型的依赖类型语言（WIP）\ngraphql-rust/juniper， GraphQL server库\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-14 11:29" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今天新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "&Trait, Box, impl Trait, dyn Trait有什么不同呢？原文https://joshleeb.com/posts/rust-traits-and-trait-objects/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust中的trait和trait对象" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "varkor何许人也？\ngithub.com/varkor\n-varkor.com\n原文https://internals.rust-lang.org/t/please-welcome-varkor-to-the-compiler-team/7716" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust编译器团队又加入了新的一员 varkor" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n原文\ngist\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "使用过程宏实现自动转换类型" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://www.admintome.com/blog/install-rust-on-ubuntu-18-04/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "ubuntu 18.04 安装Rust" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://noyez.gitlab.io/post/2018-06-11-rocket-to-actix/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "又一篇：从Rocket到Actix" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Simplabs是一家专注于ruby on rails、elixir的外包咨询公司，也对Rust产生了兴趣。难道Actix要带火Rust了吗？actixhttps://simplabs.com/blog/2018/06/11/actix.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-13 11:58" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "博文：关于Actix简要但全面的一个介绍" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "crossbeam_channelhttps://docs.rs/crossbeam-channel/0.2.0/crossbeam_channel/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-12 10:28" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "crossbeam_channel新版本发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Rust的生成测试代码覆盖率工具原文https://xd009642.github.io/2018/06/11/Tarpaulin-past-present-future.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-12 10:28" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Tarpaulin（cargo-tarpaulin）的过去现在未来" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "rust threads detachhttp://www.squidarth.com/rc/rust/concurrency/2018/06/09/rust-threads-detach.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-12 10:28" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "探索Rust线程的工作机制" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nryanisaacg/quicksilver， 纯Rust实现的2D 游戏引擎 ，支持桌面和Web（wasm32-unknown-unknown）\nalyssais/memsocket，Rust异步套接字接口，用于client和server在内存中进行通信\nsebcrozet/kiss3d，Rust 3D引擎\nfalconre/falcon，二进制分析框架\naatxe/irc， 异步IRC客户端\nmimblewimble/grin， MimbleWimble协议的最小化实现，该协议用于让数字货币交易匿名化\nt-rex-tileserver/t-rex，矢量切片服务器（GIS领域）\ngtk-rs/cairo，Cairo 绑定，cairo是R语言的高质量图形渲染引擎\nmaciejkula/wyrm，自动微分库\nsolana-labs/solana，区块链框架\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-11 10:30" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今天新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Making coroutines simpler, faster, and more generalPDFhttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1063r0.pdf" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-10 11:06" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "C++ Core Coroutines 提案" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "TL;DR  All in all, I'm very happy with Rust.原文http://jakob.space/blog/post/First+Impressions+of+the+Rust+Programming+Language" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-10 11:06" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "对Rust编程语言的第一印象" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PRhttps://github.com/servo/servo/pull/21029" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-10 11:06" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "servo升级了js引擎" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "支持 wasm32-unknown-unknown + WebGL 1原文https://www.reddit.com/r/rust/comments/8pvgpb/try_nphysics3d_demos_on_your_desktop_browser/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-10 11:06" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "nphysics3d 可以运行在桌面浏览器" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ndguo/strsim-rs，字符串相似性度量。\nspearow/juice， 以前的leaf改成了juice，机器学习引擎\ntmerr/i3ipc-rs，通过IPC接口控制 i3 windows manager\nglium/glium，安全的OpenGL Rust绑定\njaparic/svd2rust，「嵌入式」由svd文件生成rust寄存器映射结构\nretep998/winapi-rs，windows API的Rust绑定\nbytesnake/telebot，基于futures实现的telegram bot\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-10 11:06" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "「It’s a good question - this is a prototype to see if the TS+ url import + message passing is viable. I’m currently evaluating rust and other tech for the next sprint. Update soon.」issueshttps://github.com/ry/deno/issues/11#issuecomment-394171740" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "deno作者回复了为什么不用Rust：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "只是一张截图，不是教程\ngfx-portability\n原文\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "基于gfx-portability来运行dota2" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "rust-trustnotehttps://github.com/trustnote/rust-trustnote" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "may作者搞的区块链项目Trustnote，是基于Rust重构的nodejs的区块链项目" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8pogxx/job_looking_for_contract_with_full_time_potential/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "招聘贴：量子链Qtum招Rust区块链开发者" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "validatorhttps://github.com/Keats/validator" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个验证库" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://woboq.com/blog/qmetaobject-from-rust.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "集成Rust和QML：在编译时创建QMetaObject" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "介绍了他们为Rust设计正式语义的工作，它们从Rust语言中提纯了一个完整的语义模型，和国内有人搞的krust有点相似PDFhttps://aaronweiss.us/pubs/ml18.pdf" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "东北大学（国外那个Northeastern University）又发文了" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "我的观点：会 。（带节奏）你怎么看？看看其他人怎么说原文https://www.reddit.com/r/rust/comments/8pocvk/do_you_think_rust_will_grow_like_go_did_in_the/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "讨论贴： 你认为Rust未来五年内会像Go那样成长吗？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8pi61h/debian_developers_getting_ready_to_package_rust/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Debian开发人员正在打包Rust crate" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.vandenoever.info/blog/2018/06/09/to-do-a-rust-gui.htmlRust+Wasm做的游戏用的这个库 ：https://github.com/SergiusIW/gate暂时未见开源在线Playhttp://www.matthewmichelotti.com/games/project_ice_puzzle/\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-09 11:49" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "使用Rust和Qt完成一个Todo List" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "侧重于并发相关内容原文https://blog.troutwine.us/2018/06/07/hands-on-concurrency-with-rust/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-08 11:05" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "「英文」Rust社区又一本新书发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n原文\ndiscourse.diesel.rs\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-08 11:05" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Diesel开了一个论坛，专门 用于讨论Diesel 2.0相关内容" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "crates.rs/indexhttps://crates.rs/index" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-08 11:05" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个非官方的crates.io替代品" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "内容包括：体验 - 如何轻松、愉快、有趣地使用解析器生成器？API - 生成的解析器应具有的API。解析技术 - 如何从文本到解析树？原文https://matklad.github.io/2018/06/06/modern-parser-generator.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-08 11:05" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "博文：现代解析器生成器" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PDFhttps://www.usenix.org/system/files/conference/hotos15/hotos15-paper-mcsherry.pdf\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-08 11:05" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该论文探讨了大数据分布式中被忽视的成本问题（Rust示例）" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "actix-raw拔得头筹原文https://www.techempower.com/benchmarks/#section=data-r16&hw=ph&test=plaintext" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-07 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Web框架性能测试竞赛 第16回合" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n原文\niui\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-07 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "跨平台UI工具包iui发布0.3" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "pphttps://github.com/flo-l/pp_rs/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-07 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该库可以让JSON输出的更有尊严" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "配合direnv来使用envrc-rshttps://github.com/roxma/envrc-rs\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-07 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该库支持自动source bash .envrc 文件" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "有点Bug很正常啊，别说话，请更新。原文https://www.reddit.com/r/rust/comments/8osmq0/announcing_rust_1262/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.26.2 发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n计划由rustup分发clippy，为了不依赖于nightly\nlint审计\n发布1.0\n原文https://manishearth.github.io/blog/2018/06/05/the-future-of-clippy-the-rust-linter/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Clippy的未来" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "seL4是一款开源操作系统内核（感觉最近有很多微内核项目）。 feL4项目是Rust项目，可以在seL4上下文中运行并使用seL4 API原文https://www.reddit.com/r/rust/comments/8oqppz/introducing_fel4_rust_programs_for_the_sel4/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "介绍feL4：基于seL4微内核编写Rust" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "这里给出了赞助的方式和赞助者名单非官方的页面，但是由官方核心人员aturon亲自整理的名单原文http://aturon.github.io/sponsor/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "有没有人或公司想赞助Rust的？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://www.squidarth.com/rc/rust/2018/06/04/rust-concurrency.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "博文：Rust安全并发" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "async 方法和对象安全的关联原文https://boats.gitlab.io/blog/post/async-methods-ii/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "withoutboats async方法系列 II：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "来自Parity开发者的博文（记得发了好几篇了）原文http://troubles.md/posts/why-phantomdata/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "为什么要用PhantomData？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该库会自动检测你系统中的包管理软件来完成版本升级的任务使系统保持最新状态慎用！topgradehttps://github.com/r-darwish/topgrade" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "升级一切？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ncryptape/cita， 国内秘猿科技开发的区块链项目\nethanhs/cce， 支持在终端使用https://godbolt.org/的功能 （网页实时编译C++到汇编代码）\njuanibiapina/roadrunner， 快速和可配置的shell prompt\nsozu-proxy/sozu， Rust实现的HTTP反向代理\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-06 11:10" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜新上榜项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该文章记录了Rust编译器性能优化提升的过程原文https://blog.mozilla.org/nnethercote/2018/06/05/how-to-speed-up-the-rust-compiler-some-more-in-2018/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust编译器是如何加速的" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "librsvghttps://github.com/GNOME/librsvg" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GNOME上Rust实现的SVG渲染库" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "一个德国线下演讲PPT，视频暂未上传\n原文\n用Rust写操作系统教程\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "OS开发Rust之道" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "曾经每日新闻介绍过的工具：\nrustwasm/rust_wasm_template，可以快速开始rust+wasm的项目模板\nrustwasm/console_error_panic_hook，更容易的在浏览器debug 来自rust的panic\nposts/rust-wasm-snowhash，  将hash生成可视化的雪花\n新工具：\nxtuc/rust-plugin， webpack的Rust wasm 插件\n原文https://rustwasm.github.io/2018/06/04/this-week-in-rust-wasm-003.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "this week in Rust and Wasm" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "一种循环引用的解决方案，以往的解决办法是arena模式，该文算是对arena模式的改进原文https://matklad.github.io/2018/06/03/newtype-index-pattern.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "newtype索引模式" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "评论里提出几点：\nGitHub仍然是GitHub\nGitHub表示仍然继续之前的服务计划\n不是世界末日\n微软不会拥有你的代码\n微软技术上还没有收购GitHub（可能是时间问题）\n在GitHub没有做出过分的情况之前，不要对GitHub有所抵制\n在别的地方保留一个git镜像也不坏\ncargo下载依赖于crates.io-index存储库，而不是GitHub\n可以关注下该贴原帖https://www.reddit.com/r/rust/comments/8ommmb/microsoft_buys_github_any_impact_on_rust/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Reddit讨论贴： 微软收购GitHub对Rust开源生态有什么影响？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://zork.net/%7Est/jottings/rust-windows-and-debian.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "在Debian Linux上构建适用于Windows的Rust程序" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nsit-fyi/sit，无服务器的信息跟踪器，当前可以用来跟踪github issues，支持离线\nAaronepower/tokei， 用于快速统计代码行数的工具\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub今日趋势榜新上榜项目" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可能得晚点（北京时间）" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "今天应该是Rust1.26.2发布的日子" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "以1Password密码挑战为例原文https://sts10.github.io//2018/05/31/1password-cracking-challenge.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "用Rust构建密码破解程序" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://technosophos.com/2018/05/27/the-go-developers-quickstart-guide-to-rust.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-05 10:53" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "给Go开发者看的Rust导读" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "一个老外对Rust借用检查器的评价[doge]：the borrow checker: the dreaded enemy lurking within the Rust compiler, ready to make its move to bring pain to your life by preventing your code from compiling.借用检查器： 潜伏在Rust编译器中可怕的敌人，随时准备采取行动来阻止代码通过编译，从而给您的生活带来痛苦。「这当然是玩笑了」" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-04 10:43" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "轻松一刻" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "remacshttps://github.com/Wilfred/remacs" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-04 10:43" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "新发现一个项目： remacs = rust + emacs" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "这篇文章算是一个SIMD的完整教程了，可以看看simd path tracinghttps://bitshifter.github.io/blog/2018/06/04/simd-path-tracing/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-04 10:43" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "使用SIMD优化路径跟踪" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "r/actixhttps://www.reddit.com/r/actix/\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-04 10:43" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "reddit多了一个r/actix频道，可以关注下，专门发和actix相关的内容" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "顺带附上一个教程（如果你有机会玩Arch）：JSConf EU大会上有一个大型设备Arch（应该是Mozilla的），是由3w个led彩色灯组成的画布，可以创建动画。作者Lin Clark写这个教程，是希望能参加大会的人可以有机会用rust+wasm写一个模块跑在Arch上面，因为以往都是js模块，这次来个不一样的。教程https://hacks.mozilla.org/2018/06/babys-first-rustwebassembly-module-say-hi-to-jsconf-eu/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "JSConfEU大会上Rust+Wasm吸引眼球" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "「 Rust并不试图成为每个人的语言，但它的目标受众和用例仍然多元化。」「“我反对这个提案中的每个想法”。“这个功能会毁掉Rust”。“铁锈正朝着错误的方向前进”。这些感觉是真实的和合法的。但是接受和放大它们直接违背了多元和积极思维的原则。完全不会给Rust创新性积极思考带来好处。这是一个恶性循环：如果每个人都在大喊大叫，真正的倾听会变得非常痛苦」原文http://aturon.github.io/2018/06/02/listening-part-2/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Aturon： 信任与倾听 Part 2" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该文章解释了和Cow类型有关的细节原文http://deterministic.space/secret-life-of-cows.htmlRust双端堆实现 min-max-heap 发布1.2.0版本O(log n)时间复杂度原文https://www.reddit.com/r/rust/comments/8o2mv6/announcing_minmaxheap_120/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Cow的秘密" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "是一个Rust实现的苹果推送通知客户端，据作者说，他已经在生产环境中使用该库实现了千万次产品推广。原文https://www.reddit.com/r/rust/comments/8nze3p/announcing_a2_a_batteriesincluded_apple_push/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "基于hyper 0.12实现的库a2" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.apress.com/us/blog/all-blog-posts/assignment-semantics/15805464" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "该文比较了python、JavaScript, Java, C++, 和 Rust的赋值语义" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nivanceras/diwata，一个用户友好的PostgreSQL的数据库接口。diwata的目标是成为后端管理员的替代品，而无需为其明确编写代码。支持docker部署。\nmaidsafe/crust，构建P2P网络必须的库，支持NAT穿透。\nJacobEberhardt/ZoKrates，以太坊zkSNARKs 工具包（该库还不能用于生产）\nLuminarys/synapse，一个BitTorrent守护进程\nrust-osdev/x86_64，一个支持 x86-64专门指令、寄存器等的库\nrust-bitcoin/rust-bitcoin， rust实现的比特币库（但不能用于验证区块链数据）\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-03 11:56" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今日新上榜的项目" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n\n更快、更正确\n\n\n包含了http crate\n\n\n内建支持HTTP2\n\n\n更易使用\n\n\n更好的runtime支持，集成了Tokio runtime\n\n\n更好的body steam支持\n\n\n通告\n\n\nrelease note\n\n更快、更正确包含了http crate内建支持HTTP2更易使用更好的runtime支持，集成了Tokio runtime更好的body steam支持通告http://seanmonstar.com/post/174480374517/hyper-v012release notehttps://github.com/hyperium/hyper/releases/tag/v0.12.0" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "hyper v0.12发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可以用它编写一个Rust调试器体验下gimlihttps://github.com/gimli-rs/gimli" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "一个解析DWARF debug格式的库" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://danielwelch.github.io/rust-web-service.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "使用actix-web实现github webhook的示例" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "下周二发布\n通告\n1.26.2 releases note\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.26.2 预发布测试" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该博客试图通过几个示例来帮助你理解Rust借用系统原文http://www.squidarth.com/rc/rust/2018/05/31/rust-borrowing-and-ownership.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "不要再害怕借用检查" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "podcasthttps://newrustacean.com/show_notes/cysk/wasm/index.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "podcast： 你应该知道的wasm工具" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可以更方便地解析urlhttp-with-urlhttps://pyfisch.org/blog/http-with-url/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "新库 http-with-url" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Helix是一个Ruby绑定库，可以方便地用它来编写Rust代码扩展Ruby\n原文\ntwitch直播\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "「RubyKaigi!大会」这哥们直播使用Helix来写生命游戏" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "写Unsafe更自由了呢，也可以通过它来控制Vec和Box的内存分配了PR51241https://github.com/rust-lang/rust/pull/51241\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-02 11:17" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "准备稳定 GlobalAlloc 和 #[global_allocator]" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "祝大家节日快乐" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://github.com/Aaronepower/rust/blob/575d1812de3095414b1a7ff1e2fc4f5ebed8af46/RELEASES.md" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.27 release notes都写好了，准备6.21发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "wasm-packhttps://github.com/ashleygwilliams/wasm-pack/releases/tag/v0.3.0" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "wasm-pack 0.3发布" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "主要是因为作者没有多余的时间在开源与工作生活中找到平衡，也是因为Rust在异步方面的支持目前还不太稳定the state of gothamhttps://gotham.rs/blog/2018/05/31/the-state-of-gotham.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "gotham宣布暂停维护，召集接盘侠" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "async方法有望在7月份加入nightly版本试用原文https://boats.gitlab.io/blog/post/async-methods-i/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "官方人员系列博文：async  方法 PartI" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\njgavris/rs-git-fsmonitor，Rust实现的core.fsmonitor hook（背景：Git 2.16添加了对core.fsmonitor hook的支持，以允许外部工具通知它哪些文件已经更改。）\nspacejam/sled， 现代嵌入式数据库\nImageOptim/gifski，基于pngquant的高质量Gif编码器，可以将视频转换为高质量的Gif动图。\nmre/awesome-static-analysis，针对静态分析工具的awesome列表，记录了各种语言的静态分析工具，包括Rust的Clippy、rustfix等。\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-06-01 11:19" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今日新上榜的四个项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "scoutapp.comhttps://scoutapp.com/在之前他们的提供的监控产品中，比如ruby和elixir，都是重复着相同的核心，比如JSON负载格式、sql语句解析等，用Ruby写一遍，然后又用elixir写一遍。他们不想每次上一个新产品都重复实现一遍核心逻辑。所以，从最近新上马的Python监控产品开始，他们将业务和核心进行了剥离。其中核心逻辑使用了Rust。在本篇博客中，他们分享这个选型Rust的过程。原文http://blog.scoutapp.com/articles/2018/04/10/why-put-rust-in-our-python-monitoring-agent" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-31 10:59" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Scoutapp是提供应用监控服务的产品" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "实现了一个过程宏，用来帮助将Rust的结构体翻译为C++/python/C#语言对应的结构Translatorhttps://github.com/LivingInSyn/Translator" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-31 10:59" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "新库Translator" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://busy.org/@drsensor/mix-rust-code-webassembly-with-vue-component-basic" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-31 10:59" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "整合Rust+wasm+vue组件" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "使用sqlite和diesel框架原文https://medium.com/@rippinrobr_66849/2-conspiracies-databases-and-diesel-rs-ac1d8d3499b3" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-31 10:59" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Learning Rust 系列博客 Part II" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\ndotcypress/mtproxy ： MTProto（Telegram自定义的通讯协议，核心技术之一）代理服务器\ncretonne/cretonne，该项目可以将目标无关的IR生成可执行的机器码（IR层的LLVM？）\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-31 10:59" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今天新上榜的两个项目：" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://blog.rust-lang.org/2018/05/29/Rust-1.26.1.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-30 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust 1.26.1发布，主要是修复在1.26中发现的几个Bug" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "结果：\n1.26          49%\nnightly      35%\n其他         16%\n参与人数  177" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-30 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "推上的一个Rust版本使用小调查" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "该PR已经被merge，作为新的借用检查器merged PR 51133https://github.com/rust-lang/rust/pull/51133" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-30 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "polonius已经被整合到Rust里" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\nda-x/tetris-demo， 用Piston写的俄罗斯方块游戏demo\nmaps4print/azul，一个新的跨平台GUI框架，使用了webrender引擎\ndjc/quinn，一个QUIC（Quick UDP Internet Connections）协议的Rust实现\n\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-30 10:01" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "GitHub趋势榜今天上榜的新项目" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "可以查看Rust RFC的动态rusty dashhttp://rusty-dash.com/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "这是个RFC Bot" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PingCAP和Mozilla联合组织消息来源：PingCAP CTO" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "RustConf Asia 有望2018年底在北京举办" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://iandouglasscott.com/2018/05/28/exploring-rust-fat-pointers/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "探索Rust胖指针" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "油管合集https://www.youtube.com/watch?v=23lRkdDXqY0&list=PL85XCvVPmGQgdqz9kz6qH3SI_hp7Zb4s1" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "RustFest 2018 大会视频已上传到Youtube" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://www.reddit.com/r/rust/comments/8msrfp/help_add_wasmbindgen_support_to_rand/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "来帮助wasmbidgen支持rand" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://medium.com/@_lrlna/sketchnotes-from-rustfest-paris-2018-8d985300b4d4" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "RustFest 2018 部分演讲者们的Topic素描笔记" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "PR51133https://github.com/rust-lang/rust/pull/51133消息来源：野喵" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "「NLL动态」新的借用检查器polonius开始整合" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文https://falseidolfactory.com/2018/05/28/gfx-windows-and-resizing.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "gfx-rs的一个使用教程" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://troubles.md/posts/rustfest-2018-workshop/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "RustFest 2018 workshop 内容" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "原文http://rickyhan.com/jekyll/update/2018/05/26/hindley-milner-tutorial-rust.html\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-29 11:04" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "TensorScript类型推断：Rust中的Hindley-Milner" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "如果你被这篇文章的标题吸引，那说明你属于「认为使用类型系统还不如多整点测试」的人群。但如果你看完他，你会发现，作者曾经也是这样的人，只不过Rust拯救了他。原文https://dmerej.info/blog/post/trying-mypy/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-28 10:45" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "他说：我不需要类型系统。" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "palette可以让任何人都能轻松地进行线性颜色计算和转换的库。 它提供了两种精确工具，可以精确处理所需的色彩空间，以及一种抽象出一些常规颜色类型。\n\npalette\n\n\n原文\n\npalettehttps://github.com/Ogeon/palette原文https://ogeon.github.io/2018/05/27/palette-0-4-0-and-0-3-0.html" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-28 10:45" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "palette发布了0.4版本" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Cervus是国人（QQ群友）搞的构建于Linux之上的WASM微内核。作者还搞了一个GitHub组织CommonWA， 看来是侧重于探索wasm的通用领域。 https://github.com/CommonWA原文https://www.reddit.com/r/rust/comments/8mhddt/cat1_implemented_on_webassembly_cervus/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-28 10:45" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "基于Cervus实现cat命令" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "Nebulet是基于Rust和Wasm构建的微内核，和Cervus的区别在于，Nebulet是独立于其他操作系统的微内核，而Cervus是构建于Linux之上的微内核。Nebulet是作者对操作系统重新设计的一次探索，利用wasm来代替机器码来执行应用程序。感兴趣的可以关注一下。现在的年轻人不得了，一言不合就重新设计个操作系统微内核。原文http://lsneff.me/why-nebulet/" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-28 10:45" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "为什么是Nebulet？" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n官网\ntwitter RustFest\n昨天好奇RustFest为啥在巴黎举办，有两位朋友告诉我原因：KiChjang  ： rust 在欧洲一直都有很多贡献者Zack： 欧洲是ML系的大本营，OCaml/F#/ReasonML都是欧洲关注多\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-28 10:45" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "可以在从以下链接来关注RustFest 2018" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "\n原文\nnalgebra.org\n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-27 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "Rust的线性代数库nalgebra现在可以支持直接编译到wasm，并支持no_std 下不依赖标准库进行编译，可以用于嵌入式系统。" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "邀请大家来进行预发布测试。该版本修改了一些和impl Trait和rustfmt相关的Bug，以及RLS支持了windows原文https://internals.rust-lang.org/t/rust-1-26-1-prerelease-testing/7646" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-27 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "下周二（美帝时间）会发布1.26.1版本" }, "type": "text" }], "type": "title" } }, { "Author": { "rich_text": [{ "text": { "content": "ChaosBot" }, "type": "text" }], "type": "rich_text" }, "Intro": { "rich_text": [{ "text": { "content": "试试能看不？ 10天后应该也会在油管上传视频livetimehttps://paris.rustfest.eu/livetime/「伪」Chaos Bot记者也为你送来现场图片：\n( 每日新闻备份地址 )\nTelgram Channel ： https://t.me/rust_daily_news \n" }, "type": "text" }], "type": "rich_text" }, "Link": { "rich_text": [{ "text": { "content": "" }, "type": "text" }], "type": "rich_text" }, "Time": { "rich_text": [{ "text": { "content": "2018-05-27 09:40" }, "type": "text" }], "type": "rich_text" }, "Title": { "title": [{ "text": { "content": "这几天在巴黎举办的RustFest大会 实时秀" }, "type": "text" }], "type": "title" } },]
